一、Tomcat基础
    1、web概念
      C/S:客户端/服务器端
      B/S：浏览器/服务器端
      
      静态资源：所有用户访问所看到的都是一样的。可被浏览器直接解析。HTML5,CSS，JavaScript
      动态资源：每个用户访问相同资源结果可能不一样。不可被浏览器直接解析，需要转换为静态资源，再返回给浏览器。servlet,jsp,php,asp
      
      网络通信三要素：
        A 传输协议:安全协议TCP；不安全协议UDP
        B 域名IP
        C 端口号
        
     2、web服务器
        服务器：安装了服务器软件的计算机
        服务器软件：接收用户请求，处理请求，做出响应
        web服务器软件：接收用户请求，处理请求，做出响应，可部署web项目，让用户通过浏览器访问。
        
        常见web服务器软件
        weblogic/webSphere/JBoss  收费 大型Java EE服务器
        Tomcat                    免费 中小型Java EE服务器
        
二、Tomcat架构
    Http工作原理
    HTTP协议是 浏览器与服务器端之间的数据传输协议
    应用层协议
    基于TCP/IP协议
    
    HTTP服务器->servlet容器->servlet接口->业务类
    
    servlet容器工作流程
    用户请求-》HTTP服务器用ServlatRequest对象将请求信息封装-》调用Servlet容器的Service方法-》Servlet容器拿到请求，
    根据请求的URL和Servlet的映射关系知道相应的Servlet->调用Servlet容器的Service方法处理请求-》把servletRespomse对象返回给
    HTTP服务器-》HTTP服务器将响应发送给用户
    定位->加载->调用
    
    Tomcat整体架构
    核心功能1：处理Socket连接，负责网络字节流与Request和Responnse对象的转化
    核心功能2：加载和管理Servlet,以及具体处理Request请求
    
    对应两大组件
    核心功能1->连接器（Connector）
    核心功能2->容器（Container）
    
    
    连接器coyote
    Coyote是Tomcat服务器提供给客户端/浏览器访问的外部接口
    Coyote封装了底层的网络通信（Socket）,为Catalina容器提供统一接口，使得Catalina容器与具体请求协议及IO操作方式解耦
    
    IO模型
    NIO  非阻塞(默认)
    NIO2 异步IO
    APR
    
    Tomcat
三、Jasper

四、tomcat服务器配置

五、web应用配置

六、Tomcat管理配置

七、JVM配置

八、Tomcat集群

九、Tomcat安全

十、Tomcat性能调优

十一、Tomcat附件功能



